basePath: /
definitions:
  ds.Cart:
    properties:
      quantity:
        example: 3
        type: integer
      store:
        example: 976c088c-f218-422b-aff6-f9e1cf792860
        type: string
    type: object
  ds.PriceStore:
    properties:
      price:
        example: 300
        type: integer
    type: object
  ds.QuantityStores:
    properties:
      quantity:
        example: 10
        type: integer
    type: object
  ds.StoreDocs:
    properties:
      discount:
        example: 400
        type: integer
      image:
        example: https://res.cloudinary.com/dh4qv3hob/image/upload/v1667665906/Promos/Five_gioiio.png
        type: string
      name:
        example: Пятёрочка
        type: string
      price:
        example: 200
        type: integer
      promo:
        example:
        - djzML
        - MdUI7
        - byP1f
        items:
          type: string
        type: array
      quantity:
        example: 3
        type: integer
    type: object
  swagger.CartDecrease:
    properties:
      promo:
        example: 4
        type: integer
    type: object
  swagger.CartIncrease:
    properties:
      promo:
        example: 4
        type: integer
    type: object
  swagger.Change:
    properties:
      changed:
        type: boolean
    type: object
  swagger.Create:
    properties:
      created:
        type: boolean
    type: object
  swagger.Delete:
    properties:
      deleted:
        type: boolean
    type: object
  swagger.Error:
    properties:
      description:
        type: string
      error:
        type: string
      type:
        type: string
    type: object
  swagger.StorePromo:
    properties:
      promo:
        example:
        - gR3hr
        items:
          type: string
        type: array
    type: object
host: 127.0.0.1:8080
info:
  contact:
    email: 79508031750@yandex.ru
    name: Sergey Nekrasov
    url: https://vk.com/serega_nekrasov
  description: Store with promo codes for various stores
  title: Freebie-shop
  version: "1.0"
paths:
  /cart:
    get:
      description: Get a list of the entire basket
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.Cart'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Get a whole cart
      tags:
      - Info
  /cart/{Store}:
    get:
      description: Get one store from the shopping cart
      parameters:
      - description: Магазин
        in: path
        name: Store
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Get store from the cart
      tags:
      - Info
  /cart/decrease/{Store}:
    get:
      description: Decrease by 1 the number of promo codes in the cart
      parameters:
      - description: Магазин
        in: path
        name: Store
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.CartDecrease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Decrease by 1 in the cart
      tags:
      - Info
  /cart/delete/{Store}:
    delete:
      description: Delete a store in the cart using its uuid
      parameters:
      - description: Магазин
        in: path
        name: Store
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.Delete'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Delete a store in the cart
      tags:
      - Delete
  /cart/increase/{Store}:
    get:
      description: Increase by 1 the number of promo codes in the cart
      parameters:
      - description: Магазин
        in: path
        name: Store
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.CartIncrease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Increase by 1 in the cart
      tags:
      - Info
  /store:
    get:
      description: Get a list of all stores
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.StoreDocs'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Get all stores
      tags:
      - Info
    post:
      description: Adding a new promo to database
      parameters:
      - description: Магазин
        in: body
        name: Promo
        required: true
        schema:
          $ref: '#/definitions/ds.StoreDocs'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/swagger.Create'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Add a new promo
      tags:
      - Add
  /store/{UUID}:
    delete:
      description: Delete a store using its uuid
      parameters:
      - description: UUID магазина
        format: uuid
        in: path
        name: UUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.Delete'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Delete a store
      tags:
      - Delete
    get:
      description: Get store using its uuid
      parameters:
      - description: UUID магазина
        format: uuid
        in: path
        name: UUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.StoreDocs'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Get store
      tags:
      - Info
    put:
      description: Change the promo price using its uuid
      parameters:
      - description: UUID магазина
        format: uuid
        in: path
        name: UUID
        required: true
        type: string
      - description: Новая цена
        in: body
        name: Price
        required: true
        schema:
          $ref: '#/definitions/ds.PriceStore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.Change'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Change promo price
      tags:
      - Change
  /store/{UUID}/{Quantity}:
    get:
      description: Get a promo in store using its uuid
      parameters:
      - description: UUID магазина
        format: uuid
        in: path
        name: UUID
        required: true
        type: string
      - description: Кол-во
        in: path
        name: Quantity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.StorePromo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Get a promo
      tags:
      - Info
  /store/random:
    post:
      description: Adding a new random promo to database
      parameters:
      - description: Количество
        in: body
        name: Quantity
        required: true
        schema:
          $ref: '#/definitions/ds.QuantityStores'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/swagger.Create'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/swagger.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.Error'
      summary: Add a new random promo
      tags:
      - Add
schemes:
- http
- https
swagger: "2.0"
